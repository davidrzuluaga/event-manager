{"version":3,"sources":["components/snackbar/snackbar.jsx","components/card/card.jsx","views/Main/live-activities/live-activities.jsx","views/Main/active-attendees/active-attendees.jsx","views/Main/networking/networking.jsx","components/button/button.jsx","components/textarea/textarea.jsx","views/Main/anouncements/announcements.jsx","views/Main/mainpage.jsx","views/Home/header.jsx","components/input/input.jsx","views/LiveActivities/chat/chat.jsx","views/LiveActivities/screen/screen.jsx","views/LiveActivities/live-activities.jsx","views/Networking/networking.jsx","helpers/sample.js","App.js","serviceWorker.js","index.js"],"names":["Snackbar","props","className","color","information","map","info","main","subtitle","Card","title","children","LiveActivities","activities","activity","index","onClick","setPage","page","timerange","start","end","style","width","progress","attendees","class","ActiveAttendees","data","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderColor","borderWidth","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointHoverBorderWidth","pointHoverRadius","pointRadius","height","options","maintainAspectRatio","responsive","legend","display","elements","line","tension","scales","xAxes","gridLines","yAxes","Networking","hoverBackgroundColor","position","Button","Textarea","Announcements","rows","Mainpage","snacks","content","Header","now","Date","moment","tz","format","Input","Chat","user","name","description","current","comments","comment","type","self","message","time","placeholder","Screen","backgroundImage","image","aria-label","role","LiveActivitiesPage","NetworkingPage","React","useState","filterStatus","setFilterStatus","statuses","all","waiting","ended","startOf","endOf","Object","entries","status","meetings","filter","meet","owner","attendee","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b38fe8fd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './snackbar.scss';\r\n\r\nconst Snackbar = props => {\r\n  return (\r\n    <div className={`default snackbar ${props.color}`}>\r\n      {props.information &&\r\n        props.information.map(info => (\r\n          <div className=\"info\">\r\n            <p className=\"main\">{info.main}</p>\r\n            <p className=\"subtitle\">{info.subtitle}</p>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snackbar;\r\n","import React from 'react';\r\nimport './card.scss';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`default card ${props.className}`}>\r\n      {props.title && <h3>{props.title}</h3>}\r\n      <div className=\"main-content\">{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './../../../components/card/card';\r\nimport './live-activities.scss';\r\n\r\nconst LiveActivities = props => {\r\n  return (\r\n    <Card title=\"Live Activities\" className=\"live-activities\">\r\n      {props.activities &&\r\n        props.activities.map((activity, index) => (\r\n          <>\r\n            <div\r\n              className=\"event\"\r\n              onClick={() => props.setPage({ page: 1, index })}\r\n            >\r\n              <div className=\"time\">\r\n                <span>{activity.timerange.start}</span>\r\n                <span>{activity.timerange.end}</span>\r\n              </div>\r\n              <div className=\"middle\">\r\n                <h3>{activity.title}</h3>\r\n                <div className=\"subtitle\">{activity.subtitle}</div>\r\n                <div className=\"meter\">\r\n                  <span style={{ width: `${activity.progress}%` }}></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"attendees\">\r\n                <span className=\"num\">{activity.attendees}</span>\r\n                <span className=\"attendee\">Attendees</span>\r\n              </div>\r\n              <div className=\"arrow\">\r\n                <span class=\"material-icons\">keyboard_arrow_right</span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ))}\r\n    </Card>\r\n  );\r\n};\r\nexport default LiveActivities;\r\n","import React from 'react';\r\nimport Card from './../../../components/card/card';\r\nimport './active-attendees.scss';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst ActiveAttendees = props => {\r\n  const data = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    const gradient = ctx.createLinearGradient(0, 0, 0, 300);\r\n    gradient.addColorStop(0, '#23DBC1AD');\r\n    gradient.addColorStop(1, '#25EFD300');\r\n    return {\r\n      labels: ['6 AM', '8 AM', '10 AM', '12 M', '2 PM', '4 PM', '6 PM'],\r\n      datasets: [\r\n        {\r\n          label: 'Attendees',\r\n          data: [65, 59, 80, 81, 56, 55, 10],\r\n          backgroundColor: gradient,\r\n          borderColor: '#22D2B9',\r\n          borderWidth: 2,\r\n          pointColor: '#fff',\r\n          pointStrokeColor: '#fff',\r\n          pointHighlightFill: '#fff',\r\n          pointHighlightStroke: '#fff',\r\n          pointHoverBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointRadius: 1\r\n        }\r\n      ],\r\n      backgroundColor: gradient\r\n    };\r\n  };\r\n  return (\r\n    <Card title=\"Active Attendees\" className=\"active-attendees\">\r\n      <Line\r\n        data={data}\r\n        //width={10}\r\n        height={300}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          responsive: true,\r\n          legend: { display: false },\r\n          elements: { line: { tension: 0 } },\r\n          scales: {\r\n            xAxes: [{ gridLines: { color: '#bfbfbf1a' } }],\r\n            yAxes: [{ gridLines: { color: '#bfbfbf1a' } }]\r\n          }\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\nexport default ActiveAttendees;\r\n","import React from 'react';\r\nimport Card from './../../../components/card/card';\r\nimport './networking.scss';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst Networking = props => {\r\n  const data = canvas => {\r\n    return {\r\n      labels: ['Scheduled', 'Completed', 'Pending', 'Rejected'],\r\n      datasets: [\r\n        {\r\n          label: 'Attendees',\r\n          data: [300, 50, 100, 12],\r\n          backgroundColor: ['#851486', '#22d2b9', '#f4ac33', '#f23d4f'],\r\n          hoverBackgroundColor: ['#851486', '#22d2b9', '#f4ac33', '#f23d4f']\r\n        }\r\n      ]\r\n    };\r\n  };\r\n  return (\r\n    <Card title=\"Networking\" className=\"networking\">\r\n      <div className=\"chart\">\r\n        <Doughnut\r\n          data={data}\r\n          width={50}\r\n          height={300}\r\n          options={{\r\n            legend: { display: true, position: 'left' },\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            scales: {\r\n              xAxes: [{ display: false }],\r\n              yAxes: [{ display: false }]\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"numbers\">\r\n        <div className=\"item\">\r\n          <span className=\"num\">20</span>\r\n          <span className=\"subtitle\">Meetings live now</span>\r\n        </div>\r\n        <div className=\"item\">\r\n          <span className=\"num\">43</span>\r\n          <span className=\"subtitle\">Attendees in meetings</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <p onClick={() => props.setPage({ page: 2 })}>\r\n          <span>View meetings live now</span>\r\n          <span className=\"material-icons\">keyboard_arrow_right</span>\r\n        </p>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\nexport default Networking;\r\n","import React from 'react';\r\nimport './button.scss';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button {...props} className={`button ${props.className || ''}`}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from 'react';\r\nimport './textarea.scss';\r\n\r\nconst Textarea = props => {\r\n  return (\r\n    <textarea {...props} className={`textarea ${props.className || ''}`}>\r\n      {props.children}\r\n    </textarea>\r\n  );\r\n};\r\nexport default Textarea;\r\n","import React from 'react';\r\nimport Card from '../../../components/card/card';\r\nimport './announcements.scss';\r\nimport Button from '../../../components/button/button';\r\nimport Textarea from '../../../components/textarea/textarea';\r\n\r\nconst Announcements = props => {\r\n  return (\r\n    <Card title=\"Live announcements\" className=\"announcements\">\r\n      <p>\r\n        This announcement will be visible for all the attendees in the event.\r\n      </p>\r\n      <Textarea rows={5} />\r\n      <div className=\"publish\">\r\n        <Button>Publish</Button>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\nexport default Announcements;\r\n","import React from 'react';\r\nimport Snackbar from '../../components/snackbar/snackbar';\r\nimport LiveActivities from './live-activities/live-activities';\r\nimport ActiveAttendees from './active-attendees/active-attendees';\r\nimport Networking from './networking/networking';\r\nimport Announcements from './anouncements/announcements';\r\n\r\nconst Mainpage = props => {\r\n  return (\r\n    <div className=\"mainpage\">\r\n      <div className=\"col col-half\">\r\n        {props.information.snacks.map(info => (\r\n          <Snackbar information={info.content} color={info.color} />\r\n        ))}\r\n        <ActiveAttendees />\r\n        <Announcements />\r\n      </div>\r\n      <div className=\"col col-half\">\r\n        <LiveActivities\r\n          setPage={props.setPage}\r\n          activities={props.information.activities}\r\n        />\r\n        <Networking setPage={props.setPage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Mainpage;\r\n","import React from 'react';\r\nimport './header.scss';\r\nimport moment from 'moment-timezone';\r\n\r\nfunction Header(props) {\r\n  const now = new Date();\r\n  return (\r\n    <header className=\"top\">\r\n      <div className=\"col col-half\" onClick={() => props.setPage({ page: 0 })}>\r\n        {props.page.page !== 0 && (\r\n          <span class=\"material-icons\">keyboard_arrow_left</span>\r\n        )}\r\n        <div className=\"title\">\r\n          <h1>{props.information.title}</h1>\r\n          <p className=\"subtitle\">{props.information.subtitle}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"col col-half\">\r\n        <p className=\"localtime\">\r\n          Local time is {moment(now).tz('America/Denver').format('hh:mm a z')}\r\n        </p>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './input.scss';\r\n\r\nconst Input = props => {\r\n  return (\r\n    <div className={`input ${props.className || ''} `}>\r\n      <input {...props}>{props.children}</input>\r\n      <span className=\"material-icons\">send</span>\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n","import React from 'react';\r\nimport './chat.scss';\r\nimport Input from '../../../components/input/input';\r\nimport moment from 'moment-timezone';\r\n\r\nconst Chat = props => {\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"card\">\r\n        <p className=\"title\">{props.information.user.name}</p>\r\n        <p className=\"content\">{props.information.user.description}</p>\r\n      </div>\r\n      <div className=\"messages\">\r\n        {props.current.comments &&\r\n          props.current.comments.map(comment => (\r\n            <div\r\n              className={`card ${comment.type} ${comment.self ? 'self' : ''}`}\r\n            >\r\n              <p className=\"content\">\r\n                {(!comment.self || comment.type === 'reaction') && (\r\n                  <span className=\"title\">{comment.name}</span>\r\n                )}\r\n                <span className=\"content\">\r\n                  {comment.type === 'reaction' && 'reacted'} {comment.message}\r\n                </span>\r\n              </p>\r\n              {!comment.self && (\r\n                <p className=\"time\">\r\n                  {moment(comment.time).tz('America/Denver').format('hh:mm a ')}\r\n                </p>\r\n              )}\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      <div className=\"options\">\r\n        <Input placeholder=\"Type a message...\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chat;\r\n","import React from 'react';\r\nimport './screen.scss';\r\n\r\nconst Screen = props => {\r\n  const current = props.current;\r\n  return (\r\n    <div className=\"screen\">\r\n      <div className=\"source\">\r\n        <p className=\"title\">{current.title}</p>\r\n        <p className=\"subtitle\">{current.subtitle}</p>\r\n      </div>\r\n      <div\r\n        className=\"picture\"\r\n        style={{ backgroundImage: `url(${current.image})` }}\r\n      ></div>\r\n\r\n      <div className=\"options\">\r\n        <div className=\"screenplay\">\r\n          <span class=\"material-icons\">volume_up</span>\r\n          <span class=\"material-icons\">fullscreen</span>\r\n        </div>\r\n        <div className=\"reactions\">\r\n          <span aria-label=\"\" role=\"img\">\r\n            🙏\r\n          </span>\r\n          <span aria-label=\"\" role=\"img\">\r\n            👏\r\n          </span>\r\n          <span aria-label=\"\" role=\"img\">\r\n            👍\r\n          </span>\r\n          <span aria-label=\"\" role=\"img\">\r\n            ❤️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Screen;\r\n","import React from 'react';\r\nimport './live-activities.scss';\r\nimport Chat from './chat/chat';\r\nimport Screen from './screen/screen';\r\n\r\nconst LiveActivitiesPage = props => {\r\n  const current = props.information.activities[props.page.index];\r\n  return (\r\n    <div className=\"live-activities-page\">\r\n      <div className=\"col\" style={{ width: '60%' }}>\r\n        <Screen current={current} />\r\n      </div>\r\n      <div className=\"col\" style={{ width: '35%' }}>\r\n        <Chat current={current} information={props.information} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LiveActivitiesPage;\r\n","import React from 'react';\r\nimport Card from '../../components/card/card';\r\nimport './networking.scss';\r\nimport moment from 'moment-timezone';\r\n\r\nconst NetworkingPage = props => {\r\n  const [filterStatus, setFilterStatus] = React.useState('all');\r\n\r\n  const statuses = {\r\n    all: 'All',\r\n    waiting: 'Waiting for attendee',\r\n    progress: 'In progress',\r\n    ended: 'Ended'\r\n  };\r\n\r\n  const filteredEventAnalytics = () => {\r\n    if (filterStatus !== 'all')\r\n      return props.information.meetings.filter(\r\n        meet => meet.status === filterStatus\r\n      );\r\n    else return props.information.meetings;\r\n  };\r\n\r\n  const now = new Date();\r\n\r\n  return (\r\n    <div className=\"network\">\r\n      <p className=\"title\">\r\n        Meetings live now{' '}\r\n        <span className=\"time\">\r\n          {moment(now).startOf('hour').tz('America/Denver').format('hh:mm A')} -\r\n          {moment(now).endOf('hour').tz('America/Denver').format('hh:mm A')}\r\n        </span>\r\n      </p>\r\n      <div className=\"nav\">\r\n        {Object.entries(statuses).map(status => (\r\n          <div\r\n            className={`tab ${filterStatus === status[0] && 'selected'}`}\r\n            onClick={() => setFilterStatus(status[0])}\r\n          >\r\n            {status[1]}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"appointments\">\r\n        {filteredEventAnalytics().map(meet => (\r\n          <Card className=\"appointment\">\r\n            <p className=\"info\">\r\n              <span className=\"owner\">Meeting schedule by {meet.owner}</span>\r\n              <span className={`status ${meet.status}`}>\r\n                {statuses[meet.status]}\r\n              </span>\r\n            </p>\r\n            <div className=\"participant\">\r\n              <div className=\"picture\">\r\n                <div\r\n                  className=\"pic\"\r\n                  style={{\r\n                    backgroundImage: `url(${meet.attendee.image})`\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"description\">\r\n                <span className=\"name\">{meet.attendee.name}</span>\r\n                <span className=\"subtitle\">{meet.attendee.subtitle}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"menu\">\r\n              <span class=\"material-icons\">more_vert</span>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NetworkingPage;\r\n","const information = {\r\n  title: 'Live Event Analytics',\r\n  subtitle: 'Ipsum Event 2020',\r\n  user: {\r\n    name: 'Nombre de usuario',\r\n    description: 'Lorem ipsum dolor sit amet.'\r\n  },\r\n  snacks: [\r\n    {\r\n      content: [{ main: '12.043', subtitle: 'Registered attendees' }],\r\n      color: 'darkmagenta'\r\n    },\r\n    {\r\n      content: [\r\n        { main: '6.320', subtitle: 'Attendees online' },\r\n        { main: '56%', subtitle: 'Attendance' }\r\n      ],\r\n      color: 'lightseagreen'\r\n    }\r\n  ],\r\n  activities: [\r\n    {\r\n      timerange: { start: '12:00 AM', end: '2:00 PM' },\r\n      title: 'MAKE THE LEAP TO TEACH LEAD',\r\n      subtitle: 'Ryan Cromwell',\r\n      attendees: 800,\r\n      progress: 80,\r\n      image: 'image/Ryan_Cromwell.png',\r\n      comments: [\r\n        {\r\n          type: 'reaction',\r\n          name: 'Nombre de usuario',\r\n          self: true,\r\n          message: '😉',\r\n          time: new Date()\r\n        },\r\n        {\r\n          type: 'message',\r\n          name: 'Nombre de usuario',\r\n          message:\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nulla aliquet enim tortor at auctor urna. Cursus vitae congue mauris rhoncus aenean.',\r\n          self: true,\r\n          time: new Date()\r\n        },\r\n        {\r\n          type: 'message',\r\n          name: 'Nombre de usuario',\r\n          message:\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nulla aliquet enim tortor at auctor urna. Cursus vitae congue mauris rhoncus aenean.',\r\n          self: false,\r\n          time: new Date()\r\n        },\r\n        {\r\n          type: 'reaction',\r\n          name: 'Nombre de usuario',\r\n          self: true,\r\n          message: '🙏',\r\n          time: new Date()\r\n        },\r\n        {\r\n          type: 'message',\r\n          name: 'Nombre de usuario',\r\n          message:\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nulla aliquet enim tortor at auctor urna. Cursus vitae congue mauris rhoncus aenean.',\r\n          self: false,\r\n          time: new Date()\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      timerange: { start: '12:00 AM', end: '2:00 PM' },\r\n      title: 'Name of the activity',\r\n      subtitle: 'Evelyn J. Fields | CEO of Stay Green',\r\n      image: 'image/Ryan_Cromwell.png',\r\n      attendees: 800,\r\n      progress: 30,\r\n      comments: [\r\n        {\r\n          type: 'message',\r\n          name: 'Nombre de usuario',\r\n          message:\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nulla aliquet enim tortor at auctor urna. Cursus vitae congue mauris rhoncus aenean.',\r\n          self: true,\r\n          time: new Date()\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      timerange: { start: '12:00 AM', end: '2:00 PM' },\r\n      title: 'Name of the activity',\r\n      subtitle: 'Evelyn J. Fields | CEO of Stay Green',\r\n      attendees: 800,\r\n      image: 'image/Ryan_Cromwell.png',\r\n      progress: 50,\r\n      comments: [\r\n        {\r\n          type: 'message',\r\n          name: 'Nombre de usuario',\r\n          message:\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Nulla aliquet enim tortor at auctor urna. Cursus vitae congue mauris rhoncus aenean.',\r\n          self: false,\r\n          time: new Date()\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  meetings: [\r\n    {\r\n      owner: 'Juan Pablo Castillo',\r\n      status: 'waiting',\r\n      attendee: {\r\n        subtitle: 'CEO of Stay Green',\r\n        name: 'Ryan Cromwell',\r\n        image: 'image/Marius_Ciocirlan.png'\r\n      }\r\n    },\r\n    {\r\n      owner: 'Juan David Castillo',\r\n      status: 'ended',\r\n      attendee: {\r\n        subtitle: 'CEO of Stay Green',\r\n        name: 'Ryan Cromwell',\r\n        image: 'image/Marius_Ciocirlan.png'\r\n      }\r\n    },\r\n    {\r\n      owner: 'Juan Castillo',\r\n      status: 'progress',\r\n      attendee: {\r\n        subtitle: 'CEO of Stay Green',\r\n        name: 'Ryan Cromwell',\r\n        image: 'image/Marius_Ciocirlan.png'\r\n      }\r\n    },\r\n    {\r\n      owner: 'Juan Alejandro Castillo',\r\n      status: 'waiting',\r\n      attendee: {\r\n        subtitle: 'CEO of Stay Green',\r\n        name: 'Ryan Cromwell',\r\n        image: 'image/Marius_Ciocirlan.png'\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nexport default information;\r\n","import React from 'react';\nimport './App.scss';\nimport Mainpage from './views/Main/mainpage';\nimport Header from './views/Home/header';\nimport LiveActivitiesPage from './views/LiveActivities/live-activities';\nimport NetworkingPage from './views/Networking/networking';\nimport information from './helpers/sample';\n\nfunction App() {\n  const [page, setPage] = React.useState({ page: 0, index: 0 });\n\n  const pages = () => {\n    if (page.page === 1) {\n      return <LiveActivitiesPage page={page} information={information} />;\n    } else if (page.page === 2) {\n      return <NetworkingPage page={page} information={information} />;\n    } else {\n      return <Mainpage setPage={setPage} information={information} />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header setPage={setPage} page={page} information={information} />\n      {pages()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}